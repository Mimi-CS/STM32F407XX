
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000880  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a08  08000a10  00001a10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a08  08000a08  00001a10  2**0
                  CONTENTS
  4 .ARM          00000000  08000a08  08000a08  00001a10  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a08  08000a10  00001a10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a08  08000a08  00001a08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000a0c  08000a0c  00001a0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001a10  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001a10  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a99  00000000  00000000  00001a40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002c9  00000000  00000000  000024d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000027a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00002870  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001e7c  00000000  00000000  000028fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001130  00000000  00000000  00004778  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008c32  00000000  00000000  000058a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000e4da  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000288  00000000  00000000  0000e520  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000067  00000000  00000000  0000e7a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080009f0 	.word	0x080009f0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080009f0 	.word	0x080009f0

080001c8 <main>:
{
	for(uint32_t i = 0;i<500000/2;i++);
}

int main(void)
{
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b086      	sub	sp, #24
 80001cc:	af00      	add	r7, sp, #0

	//memset is a standard C library function used to set memory (RAM) to a specific value.
	//In embedded C (especially with STM32, drivers, etc.), we often use memset to initialize
	//a structure to zero before using it.

	memset(&GpioLed,0,sizeof(GpioLed));
 80001ce:	f107 030c 	add.w	r3, r7, #12
 80001d2:	220c      	movs	r2, #12
 80001d4:	2100      	movs	r1, #0
 80001d6:	4618      	mov	r0, r3
 80001d8:	f000 fbde 	bl	8000998 <memset>
	memset(&GpioButton,0,sizeof(GpioButton));
 80001dc:	463b      	mov	r3, r7
 80001de:	220c      	movs	r2, #12
 80001e0:	2100      	movs	r1, #0
 80001e2:	4618      	mov	r0, r3
 80001e4:	f000 fbd8 	bl	8000998 <memset>

	GpioLed.pGPIOx = GPIOD;
 80001e8:	4b17      	ldr	r3, [pc, #92]	@ (8000248 <main+0x80>)
 80001ea:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80001ec:	230c      	movs	r3, #12
 80001ee:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001f0:	2301      	movs	r3, #1
 80001f2:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80001f4:	2302      	movs	r3, #2
 80001f6:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001f8:	2300      	movs	r3, #0
 80001fa:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 80001fc:	2101      	movs	r1, #1
 80001fe:	4812      	ldr	r0, [pc, #72]	@ (8000248 <main+0x80>)
 8000200:	f000 f85e 	bl	80002c0 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000204:	f107 030c 	add.w	r3, r7, #12
 8000208:	4618      	mov	r0, r3
 800020a:	f000 f941 	bl	8000490 <GPIO_Init>

	// for handling of button

	//GPIO_Handle_t GpioButton;
	GpioButton.pGPIOx = GPIOD;
 800020e:	4b0e      	ldr	r3, [pc, #56]	@ (8000248 <main+0x80>)
 8000210:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000212:	2305      	movs	r3, #5
 8000214:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000216:	2304      	movs	r3, #4
 8000218:	717b      	strb	r3, [r7, #5]
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800021a:	2302      	movs	r3, #2
 800021c:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PU;
 800021e:	2301      	movs	r3, #1
 8000220:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA,ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	4809      	ldr	r0, [pc, #36]	@ (800024c <main+0x84>)
 8000226:	f000 f84b 	bl	80002c0 <GPIO_PeriClockControl>
	GPIO_Init(&GpioButton);
 800022a:	463b      	mov	r3, r7
 800022c:	4618      	mov	r0, r3
 800022e:	f000 f92f 	bl	8000490 <GPIO_Init>

	GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5,ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	2017      	movs	r0, #23
 8000236:	f000 fadf 	bl	80007f8 <GPIO_IRQInterruptConfig>
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5,NVIC_IRQ_PRI15);
 800023a:	210f      	movs	r1, #15
 800023c:	2017      	movs	r0, #23
 800023e:	f000 fb61 	bl	8000904 <GPIO_IRQPriorityConfig>

	while(1);
 8000242:	bf00      	nop
 8000244:	e7fd      	b.n	8000242 <main+0x7a>
 8000246:	bf00      	nop
 8000248:	40020c00 	.word	0x40020c00
 800024c:	40020000 	.word	0x40020000

08000250 <EXTI9_5_IRQHandler>:
	return 0;
}

// Button press → Interrupt triggered → Clear the interrupt → Toggle LED
void EXTI9_5_IRQHandler()
{
 8000250:	b580      	push	{r7, lr}
 8000252:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_5);
 8000254:	2005      	movs	r0, #5
 8000256:	f000 fb7f 	bl	8000958 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 800025a:	210c      	movs	r1, #12
 800025c:	4802      	ldr	r0, [pc, #8]	@ (8000268 <EXTI9_5_IRQHandler+0x18>)
 800025e:	f000 fab5 	bl	80007cc <GPIO_ToggleOutputPin>
}
 8000262:	bf00      	nop
 8000264:	bd80      	pop	{r7, pc}
 8000266:	bf00      	nop
 8000268:	40020c00 	.word	0x40020c00

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	@ (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	@ (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	@ (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	@ (80002b0 <LoopForever+0xe>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	@ (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	@ (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 fb85 	bl	80009a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ff93 	bl	80001c8 <main>

080002a2 <LoopForever>:

LoopForever:
  b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	08000a10 	.word	0x08000a10
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_PeriClockControl>:
 * @return            -  none
 *
 * @Note              -  none
 * */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi)
{
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
 80002c8:	460b      	mov	r3, r1
 80002ca:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002cc:	78fb      	ldrb	r3, [r7, #3]
 80002ce:	2b01      	cmp	r3, #1
 80002d0:	d162      	bne.n	8000398 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a64      	ldr	r2, [pc, #400]	@ (8000468 <GPIO_PeriClockControl+0x1a8>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002da:	4b64      	ldr	r3, [pc, #400]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002de:	4a63      	ldr	r2, [pc, #396]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6313      	str	r3, [r2, #48]	@ 0x30
				else if(pGPIOx == GPIOI)
				{
					GPIOI_PCLK_DI();
				}
	}
}
 80002e6:	e0b9      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a61      	ldr	r2, [pc, #388]	@ (8000470 <GPIO_PeriClockControl+0x1b0>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002f0:	4b5e      	ldr	r3, [pc, #376]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002f4:	4a5d      	ldr	r2, [pc, #372]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80002f6:	f043 0302 	orr.w	r3, r3, #2
 80002fa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002fc:	e0ae      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a5c      	ldr	r2, [pc, #368]	@ (8000474 <GPIO_PeriClockControl+0x1b4>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000306:	4b59      	ldr	r3, [pc, #356]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800030a:	4a58      	ldr	r2, [pc, #352]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800030c:	f043 0304 	orr.w	r3, r3, #4
 8000310:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000312:	e0a3      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a58      	ldr	r2, [pc, #352]	@ (8000478 <GPIO_PeriClockControl+0x1b8>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800031c:	4b53      	ldr	r3, [pc, #332]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000320:	4a52      	ldr	r2, [pc, #328]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000322:	f043 0308 	orr.w	r3, r3, #8
 8000326:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000328:	e098      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a53      	ldr	r2, [pc, #332]	@ (800047c <GPIO_PeriClockControl+0x1bc>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000332:	4b4e      	ldr	r3, [pc, #312]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000336:	4a4d      	ldr	r2, [pc, #308]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000338:	f043 0310 	orr.w	r3, r3, #16
 800033c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800033e:	e08d      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a4f      	ldr	r2, [pc, #316]	@ (8000480 <GPIO_PeriClockControl+0x1c0>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000348:	4b48      	ldr	r3, [pc, #288]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800034c:	4a47      	ldr	r2, [pc, #284]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800034e:	f043 0320 	orr.w	r3, r3, #32
 8000352:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000354:	e082      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a4a      	ldr	r2, [pc, #296]	@ (8000484 <GPIO_PeriClockControl+0x1c4>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800035e:	4b43      	ldr	r3, [pc, #268]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000362:	4a42      	ldr	r2, [pc, #264]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000364:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000368:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800036a:	e077      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a46      	ldr	r2, [pc, #280]	@ (8000488 <GPIO_PeriClockControl+0x1c8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000374:	4b3d      	ldr	r3, [pc, #244]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000378:	4a3c      	ldr	r2, [pc, #240]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800037a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800037e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000380:	e06c      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a41      	ldr	r2, [pc, #260]	@ (800048c <GPIO_PeriClockControl+0x1cc>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d168      	bne.n	800045c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800038a:	4b38      	ldr	r3, [pc, #224]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800038e:	4a37      	ldr	r2, [pc, #220]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000390:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000394:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000396:	e061      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		       if(pGPIOx == GPIOA)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a33      	ldr	r2, [pc, #204]	@ (8000468 <GPIO_PeriClockControl+0x1a8>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0xee>
					GPIOA_PCLK_DI();
 80003a0:	4b32      	ldr	r3, [pc, #200]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a4:	4a31      	ldr	r2, [pc, #196]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003a6:	f023 0301 	bic.w	r3, r3, #1
 80003aa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ac:	e056      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				else if(pGPIOx == GPIOB)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a2f      	ldr	r2, [pc, #188]	@ (8000470 <GPIO_PeriClockControl+0x1b0>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0x104>
					GPIOB_PCLK_DI();
 80003b6:	4b2d      	ldr	r3, [pc, #180]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ba:	4a2c      	ldr	r2, [pc, #176]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003bc:	f023 0302 	bic.w	r3, r3, #2
 80003c0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c2:	e04b      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				else if(pGPIOx == GPIOC)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a2b      	ldr	r2, [pc, #172]	@ (8000474 <GPIO_PeriClockControl+0x1b4>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0x11a>
					GPIOC_PCLK_DI();
 80003cc:	4b27      	ldr	r3, [pc, #156]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d0:	4a26      	ldr	r2, [pc, #152]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003d2:	f023 0304 	bic.w	r3, r3, #4
 80003d6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003d8:	e040      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				else if(pGPIOx == GPIOD)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a26      	ldr	r2, [pc, #152]	@ (8000478 <GPIO_PeriClockControl+0x1b8>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_PeriClockControl+0x130>
					GPIOD_PCLK_DI();
 80003e2:	4b22      	ldr	r3, [pc, #136]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e6:	4a21      	ldr	r2, [pc, #132]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003e8:	f023 0308 	bic.w	r3, r3, #8
 80003ec:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ee:	e035      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				else if(pGPIOx == GPIOE)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a22      	ldr	r2, [pc, #136]	@ (800047c <GPIO_PeriClockControl+0x1bc>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeriClockControl+0x146>
					GPIOE_PCLK_DI();
 80003f8:	4b1c      	ldr	r3, [pc, #112]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003fc:	4a1b      	ldr	r2, [pc, #108]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003fe:	f023 0310 	bic.w	r3, r3, #16
 8000402:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000404:	e02a      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				else if(pGPIOx == GPIOF)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a1d      	ldr	r2, [pc, #116]	@ (8000480 <GPIO_PeriClockControl+0x1c0>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeriClockControl+0x15c>
					GPIOF_PCLK_DI();
 800040e:	4b17      	ldr	r3, [pc, #92]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000412:	4a16      	ldr	r2, [pc, #88]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000414:	f023 0320 	bic.w	r3, r3, #32
 8000418:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800041a:	e01f      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				else if(pGPIOx == GPIOG)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a19      	ldr	r2, [pc, #100]	@ (8000484 <GPIO_PeriClockControl+0x1c4>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_PeriClockControl+0x172>
					GPIOG_PCLK_DI();
 8000424:	4b11      	ldr	r3, [pc, #68]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000428:	4a10      	ldr	r2, [pc, #64]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800042a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800042e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000430:	e014      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				else if(pGPIOx == GPIOH)
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a14      	ldr	r2, [pc, #80]	@ (8000488 <GPIO_PeriClockControl+0x1c8>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_PeriClockControl+0x188>
					GPIOH_PCLK_DI();
 800043a:	4b0c      	ldr	r3, [pc, #48]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800043e:	4a0b      	ldr	r2, [pc, #44]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000440:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000444:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000446:	e009      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				else if(pGPIOx == GPIOI)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a10      	ldr	r2, [pc, #64]	@ (800048c <GPIO_PeriClockControl+0x1cc>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d105      	bne.n	800045c <GPIO_PeriClockControl+0x19c>
					GPIOI_PCLK_DI();
 8000450:	4b06      	ldr	r3, [pc, #24]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000454:	4a05      	ldr	r2, [pc, #20]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000456:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800045a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800045c:	bf00      	nop
 800045e:	370c      	adds	r7, #12
 8000460:	46bd      	mov	sp, r7
 8000462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000466:	4770      	bx	lr
 8000468:	40020000 	.word	0x40020000
 800046c:	40023800 	.word	0x40023800
 8000470:	40020400 	.word	0x40020400
 8000474:	40020800 	.word	0x40020800
 8000478:	40020c00 	.word	0x40020c00
 800047c:	40021000 	.word	0x40021000
 8000480:	40021400 	.word	0x40021400
 8000484:	40021800 	.word	0x40021800
 8000488:	40021c00 	.word	0x40021c00
 800048c:	40022000 	.word	0x40022000

08000490 <GPIO_Init>:

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000490:	b480      	push	{r7}
 8000492:	b087      	sub	sp, #28
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
	uint32_t temp;

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	795b      	ldrb	r3, [r3, #5]
 800049c:	2b03      	cmp	r3, #3
 800049e:	d820      	bhi.n	80004e2 <GPIO_Init+0x52>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	795b      	ldrb	r3, [r3, #5]
 80004a4:	461a      	mov	r2, r3
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	791b      	ldrb	r3, [r3, #4]
 80004aa:	005b      	lsls	r3, r3, #1
 80004ac:	fa02 f303 	lsl.w	r3, r2, r3
 80004b0:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	681a      	ldr	r2, [r3, #0]
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	791b      	ldrb	r3, [r3, #4]
 80004bc:	005b      	lsls	r3, r3, #1
 80004be:	2103      	movs	r1, #3
 80004c0:	fa01 f303 	lsl.w	r3, r1, r3
 80004c4:	43db      	mvns	r3, r3
 80004c6:	4619      	mov	r1, r3
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	400a      	ands	r2, r1
 80004ce:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	6819      	ldr	r1, [r3, #0]
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	693a      	ldr	r2, [r7, #16]
 80004dc:	430a      	orrs	r2, r1
 80004de:	601a      	str	r2, [r3, #0]
 80004e0:	e0cd      	b.n	800067e <GPIO_Init+0x1ee>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	795b      	ldrb	r3, [r3, #5]
 80004e6:	2b04      	cmp	r3, #4
 80004e8:	d117      	bne.n	800051a <GPIO_Init+0x8a>
			//EXTI (External Interrupt) in the STM32F407 Discovery Board is a hardware feature that allows
			//the microcontroller to detect external events, like pressing a button or receiving a signal from a sensor,
			//and respond to them immediately.


			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ea:	4b4e      	ldr	r3, [pc, #312]	@ (8000624 <GPIO_Init+0x194>)
 80004ec:	68db      	ldr	r3, [r3, #12]
 80004ee:	687a      	ldr	r2, [r7, #4]
 80004f0:	7912      	ldrb	r2, [r2, #4]
 80004f2:	4611      	mov	r1, r2
 80004f4:	2201      	movs	r2, #1
 80004f6:	408a      	lsls	r2, r1
 80004f8:	4611      	mov	r1, r2
 80004fa:	4a4a      	ldr	r2, [pc, #296]	@ (8000624 <GPIO_Init+0x194>)
 80004fc:	430b      	orrs	r3, r1
 80004fe:	60d3      	str	r3, [r2, #12]
			//clear RTSR
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000500:	4b48      	ldr	r3, [pc, #288]	@ (8000624 <GPIO_Init+0x194>)
 8000502:	689b      	ldr	r3, [r3, #8]
 8000504:	687a      	ldr	r2, [r7, #4]
 8000506:	7912      	ldrb	r2, [r2, #4]
 8000508:	4611      	mov	r1, r2
 800050a:	2201      	movs	r2, #1
 800050c:	408a      	lsls	r2, r1
 800050e:	43d2      	mvns	r2, r2
 8000510:	4611      	mov	r1, r2
 8000512:	4a44      	ldr	r2, [pc, #272]	@ (8000624 <GPIO_Init+0x194>)
 8000514:	400b      	ands	r3, r1
 8000516:	6093      	str	r3, [r2, #8]
 8000518:	e035      	b.n	8000586 <GPIO_Init+0xf6>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	795b      	ldrb	r3, [r3, #5]
 800051e:	2b05      	cmp	r3, #5
 8000520:	d117      	bne.n	8000552 <GPIO_Init+0xc2>
		{
			// 2. configure RTSR
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000522:	4b40      	ldr	r3, [pc, #256]	@ (8000624 <GPIO_Init+0x194>)
 8000524:	689b      	ldr	r3, [r3, #8]
 8000526:	687a      	ldr	r2, [r7, #4]
 8000528:	7912      	ldrb	r2, [r2, #4]
 800052a:	4611      	mov	r1, r2
 800052c:	2201      	movs	r2, #1
 800052e:	408a      	lsls	r2, r1
 8000530:	4611      	mov	r1, r2
 8000532:	4a3c      	ldr	r2, [pc, #240]	@ (8000624 <GPIO_Init+0x194>)
 8000534:	430b      	orrs	r3, r1
 8000536:	6093      	str	r3, [r2, #8]
			//clear FTSR
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000538:	4b3a      	ldr	r3, [pc, #232]	@ (8000624 <GPIO_Init+0x194>)
 800053a:	68db      	ldr	r3, [r3, #12]
 800053c:	687a      	ldr	r2, [r7, #4]
 800053e:	7912      	ldrb	r2, [r2, #4]
 8000540:	4611      	mov	r1, r2
 8000542:	2201      	movs	r2, #1
 8000544:	408a      	lsls	r2, r1
 8000546:	43d2      	mvns	r2, r2
 8000548:	4611      	mov	r1, r2
 800054a:	4a36      	ldr	r2, [pc, #216]	@ (8000624 <GPIO_Init+0x194>)
 800054c:	400b      	ands	r3, r1
 800054e:	60d3      	str	r3, [r2, #12]
 8000550:	e019      	b.n	8000586 <GPIO_Init+0xf6>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	795b      	ldrb	r3, [r3, #5]
 8000556:	2b06      	cmp	r3, #6
 8000558:	d115      	bne.n	8000586 <GPIO_Init+0xf6>
		{
			// 2. configure both FTSR and RTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055a:	4b32      	ldr	r3, [pc, #200]	@ (8000624 <GPIO_Init+0x194>)
 800055c:	68db      	ldr	r3, [r3, #12]
 800055e:	687a      	ldr	r2, [r7, #4]
 8000560:	7912      	ldrb	r2, [r2, #4]
 8000562:	4611      	mov	r1, r2
 8000564:	2201      	movs	r2, #1
 8000566:	408a      	lsls	r2, r1
 8000568:	4611      	mov	r1, r2
 800056a:	4a2e      	ldr	r2, [pc, #184]	@ (8000624 <GPIO_Init+0x194>)
 800056c:	430b      	orrs	r3, r1
 800056e:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000570:	4b2c      	ldr	r3, [pc, #176]	@ (8000624 <GPIO_Init+0x194>)
 8000572:	689b      	ldr	r3, [r3, #8]
 8000574:	687a      	ldr	r2, [r7, #4]
 8000576:	7912      	ldrb	r2, [r2, #4]
 8000578:	4611      	mov	r1, r2
 800057a:	2201      	movs	r2, #1
 800057c:	408a      	lsls	r2, r1
 800057e:	4611      	mov	r1, r2
 8000580:	4a28      	ldr	r2, [pc, #160]	@ (8000624 <GPIO_Init+0x194>)
 8000582:	430b      	orrs	r3, r1
 8000584:	6093      	str	r3, [r2, #8]
		}


		// Cofigure the port selection SYSCONFG Register
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	791b      	ldrb	r3, [r3, #4]
 800058a:	089b      	lsrs	r3, r3, #2
 800058c:	75fb      	strb	r3, [r7, #23]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	f003 0303 	and.w	r3, r3, #3
 8000596:	75bb      	strb	r3, [r7, #22]
		SYSCFG_PCLK_EN();
 8000598:	4b23      	ldr	r3, [pc, #140]	@ (8000628 <GPIO_Init+0x198>)
 800059a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800059c:	4a22      	ldr	r2, [pc, #136]	@ (8000628 <GPIO_Init+0x198>)
 800059e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80005a2:	6453      	str	r3, [r2, #68]	@ 0x44
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	4a20      	ldr	r2, [pc, #128]	@ (800062c <GPIO_Init+0x19c>)
 80005aa:	4293      	cmp	r3, r2
 80005ac:	d050      	beq.n	8000650 <GPIO_Init+0x1c0>
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	4a1f      	ldr	r2, [pc, #124]	@ (8000630 <GPIO_Init+0x1a0>)
 80005b4:	4293      	cmp	r3, r2
 80005b6:	d032      	beq.n	800061e <GPIO_Init+0x18e>
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a1d      	ldr	r2, [pc, #116]	@ (8000634 <GPIO_Init+0x1a4>)
 80005be:	4293      	cmp	r3, r2
 80005c0:	d02b      	beq.n	800061a <GPIO_Init+0x18a>
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	4a1c      	ldr	r2, [pc, #112]	@ (8000638 <GPIO_Init+0x1a8>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d024      	beq.n	8000616 <GPIO_Init+0x186>
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	4a1a      	ldr	r2, [pc, #104]	@ (800063c <GPIO_Init+0x1ac>)
 80005d2:	4293      	cmp	r3, r2
 80005d4:	d01d      	beq.n	8000612 <GPIO_Init+0x182>
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	4a19      	ldr	r2, [pc, #100]	@ (8000640 <GPIO_Init+0x1b0>)
 80005dc:	4293      	cmp	r3, r2
 80005de:	d016      	beq.n	800060e <GPIO_Init+0x17e>
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a17      	ldr	r2, [pc, #92]	@ (8000644 <GPIO_Init+0x1b4>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d00f      	beq.n	800060a <GPIO_Init+0x17a>
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a16      	ldr	r2, [pc, #88]	@ (8000648 <GPIO_Init+0x1b8>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d008      	beq.n	8000606 <GPIO_Init+0x176>
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	4a14      	ldr	r2, [pc, #80]	@ (800064c <GPIO_Init+0x1bc>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d101      	bne.n	8000602 <GPIO_Init+0x172>
 80005fe:	2308      	movs	r3, #8
 8000600:	e027      	b.n	8000652 <GPIO_Init+0x1c2>
 8000602:	2300      	movs	r3, #0
 8000604:	e025      	b.n	8000652 <GPIO_Init+0x1c2>
 8000606:	2307      	movs	r3, #7
 8000608:	e023      	b.n	8000652 <GPIO_Init+0x1c2>
 800060a:	2306      	movs	r3, #6
 800060c:	e021      	b.n	8000652 <GPIO_Init+0x1c2>
 800060e:	2305      	movs	r3, #5
 8000610:	e01f      	b.n	8000652 <GPIO_Init+0x1c2>
 8000612:	2304      	movs	r3, #4
 8000614:	e01d      	b.n	8000652 <GPIO_Init+0x1c2>
 8000616:	2303      	movs	r3, #3
 8000618:	e01b      	b.n	8000652 <GPIO_Init+0x1c2>
 800061a:	2302      	movs	r3, #2
 800061c:	e019      	b.n	8000652 <GPIO_Init+0x1c2>
 800061e:	2301      	movs	r3, #1
 8000620:	e017      	b.n	8000652 <GPIO_Init+0x1c2>
 8000622:	bf00      	nop
 8000624:	40013c00 	.word	0x40013c00
 8000628:	40023800 	.word	0x40023800
 800062c:	40020000 	.word	0x40020000
 8000630:	40020400 	.word	0x40020400
 8000634:	40020800 	.word	0x40020800
 8000638:	40020c00 	.word	0x40020c00
 800063c:	40021000 	.word	0x40021000
 8000640:	40021400 	.word	0x40021400
 8000644:	40021800 	.word	0x40021800
 8000648:	40021c00 	.word	0x40021c00
 800064c:	40022000 	.word	0x40022000
 8000650:	2300      	movs	r3, #0
 8000652:	757b      	strb	r3, [r7, #21]
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000654:	7d7a      	ldrb	r2, [r7, #21]
 8000656:	7dbb      	ldrb	r3, [r7, #22]
 8000658:	009b      	lsls	r3, r3, #2
 800065a:	fa02 f103 	lsl.w	r1, r2, r3
 800065e:	4a59      	ldr	r2, [pc, #356]	@ (80007c4 <GPIO_Init+0x334>)
 8000660:	7dfb      	ldrb	r3, [r7, #23]
 8000662:	3302      	adds	r3, #2
 8000664:	f842 1023 	str.w	r1, [r2, r3, lsl #2]



		EXTI->IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000668:	4b57      	ldr	r3, [pc, #348]	@ (80007c8 <GPIO_Init+0x338>)
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	687a      	ldr	r2, [r7, #4]
 800066e:	7912      	ldrb	r2, [r2, #4]
 8000670:	4611      	mov	r1, r2
 8000672:	2201      	movs	r2, #1
 8000674:	408a      	lsls	r2, r1
 8000676:	4611      	mov	r1, r2
 8000678:	4a53      	ldr	r2, [pc, #332]	@ (80007c8 <GPIO_Init+0x338>)
 800067a:	430b      	orrs	r3, r1
 800067c:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 800067e:	2300      	movs	r3, #0
 8000680:	613b      	str	r3, [r7, #16]

	//2. configure the speed

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	799b      	ldrb	r3, [r3, #6]
 8000686:	461a      	mov	r2, r3
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	791b      	ldrb	r3, [r3, #4]
 800068c:	005b      	lsls	r3, r3, #1
 800068e:	fa02 f303 	lsl.w	r3, r2, r3
 8000692:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	689a      	ldr	r2, [r3, #8]
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	791b      	ldrb	r3, [r3, #4]
 800069e:	005b      	lsls	r3, r3, #1
 80006a0:	2103      	movs	r1, #3
 80006a2:	fa01 f303 	lsl.w	r3, r1, r3
 80006a6:	43db      	mvns	r3, r3
 80006a8:	4619      	mov	r1, r3
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	400a      	ands	r2, r1
 80006b0:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	6899      	ldr	r1, [r3, #8]
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	693a      	ldr	r2, [r7, #16]
 80006be:	430a      	orrs	r2, r1
 80006c0:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006c2:	2300      	movs	r3, #0
 80006c4:	613b      	str	r3, [r7, #16]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	79db      	ldrb	r3, [r3, #7]
 80006ca:	461a      	mov	r2, r3
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	791b      	ldrb	r3, [r3, #4]
 80006d0:	005b      	lsls	r3, r3, #1
 80006d2:	fa02 f303 	lsl.w	r3, r2, r3
 80006d6:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	68da      	ldr	r2, [r3, #12]
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	791b      	ldrb	r3, [r3, #4]
 80006e2:	005b      	lsls	r3, r3, #1
 80006e4:	2103      	movs	r1, #3
 80006e6:	fa01 f303 	lsl.w	r3, r1, r3
 80006ea:	43db      	mvns	r3, r3
 80006ec:	4619      	mov	r1, r3
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	681b      	ldr	r3, [r3, #0]
 80006f2:	400a      	ands	r2, r1
 80006f4:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	68d9      	ldr	r1, [r3, #12]
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	693a      	ldr	r2, [r7, #16]
 8000702:	430a      	orrs	r2, r1
 8000704:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000706:	2300      	movs	r3, #0
 8000708:	613b      	str	r3, [r7, #16]

	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	7a1b      	ldrb	r3, [r3, #8]
 800070e:	461a      	mov	r2, r3
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	791b      	ldrb	r3, [r3, #4]
 8000714:	fa02 f303 	lsl.w	r3, r2, r3
 8000718:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	685a      	ldr	r2, [r3, #4]
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	791b      	ldrb	r3, [r3, #4]
 8000724:	4619      	mov	r1, r3
 8000726:	2301      	movs	r3, #1
 8000728:	408b      	lsls	r3, r1
 800072a:	43db      	mvns	r3, r3
 800072c:	4619      	mov	r1, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	400a      	ands	r2, r1
 8000734:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	6859      	ldr	r1, [r3, #4]
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	693a      	ldr	r2, [r7, #16]
 8000742:	430a      	orrs	r2, r1
 8000744:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000746:	2300      	movs	r3, #0
 8000748:	613b      	str	r3, [r7, #16]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT_FN)
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	795b      	ldrb	r3, [r3, #5]
 800074e:	2b02      	cmp	r3, #2
 8000750:	d131      	bne.n	80007b6 <GPIO_Init+0x326>
	{
		uint8_t temp1,temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	791b      	ldrb	r3, [r3, #4]
 8000756:	08db      	lsrs	r3, r3, #3
 8000758:	73fb      	strb	r3, [r7, #15]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	791b      	ldrb	r3, [r3, #4]
 800075e:	f003 0307 	and.w	r3, r3, #7
 8000762:	73bb      	strb	r3, [r7, #14]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	7bfa      	ldrb	r2, [r7, #15]
 800076a:	3208      	adds	r2, #8
 800076c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000770:	7bbb      	ldrb	r3, [r7, #14]
 8000772:	009b      	lsls	r3, r3, #2
 8000774:	220f      	movs	r2, #15
 8000776:	fa02 f303 	lsl.w	r3, r2, r3
 800077a:	43db      	mvns	r3, r3
 800077c:	4618      	mov	r0, r3
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	7bfa      	ldrb	r2, [r7, #15]
 8000784:	4001      	ands	r1, r0
 8000786:	3208      	adds	r2, #8
 8000788:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1]  |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	7bfa      	ldrb	r2, [r7, #15]
 8000792:	3208      	adds	r2, #8
 8000794:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	7a5b      	ldrb	r3, [r3, #9]
 800079c:	461a      	mov	r2, r3
 800079e:	7bbb      	ldrb	r3, [r7, #14]
 80007a0:	009b      	lsls	r3, r3, #2
 80007a2:	fa02 f303 	lsl.w	r3, r2, r3
 80007a6:	4618      	mov	r0, r3
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	7bfa      	ldrb	r2, [r7, #15]
 80007ae:	4301      	orrs	r1, r0
 80007b0:	3208      	adds	r2, #8
 80007b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80007b6:	bf00      	nop
 80007b8:	371c      	adds	r7, #28
 80007ba:	46bd      	mov	sp, r7
 80007bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007c0:	4770      	bx	lr
 80007c2:	bf00      	nop
 80007c4:	40013800 	.word	0x40013800
 80007c8:	40013c00 	.word	0x40013c00

080007cc <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx,uint16_t Value)
{
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx,uint8_t PinNumber)
{
 80007cc:	b480      	push	{r7}
 80007ce:	b083      	sub	sp, #12
 80007d0:	af00      	add	r7, sp, #0
 80007d2:	6078      	str	r0, [r7, #4]
 80007d4:	460b      	mov	r3, r1
 80007d6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1<<PinNumber);
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	695b      	ldr	r3, [r3, #20]
 80007dc:	78fa      	ldrb	r2, [r7, #3]
 80007de:	2101      	movs	r1, #1
 80007e0:	fa01 f202 	lsl.w	r2, r1, r2
 80007e4:	405a      	eors	r2, r3
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	615a      	str	r2, [r3, #20]
}
 80007ea:	bf00      	nop
 80007ec:	370c      	adds	r7, #12
 80007ee:	46bd      	mov	sp, r7
 80007f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007f4:	4770      	bx	lr
	...

080007f8 <GPIO_IRQInterruptConfig>:

/*
 * IRQ Configuration and ISR handling
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 80007f8:	b480      	push	{r7}
 80007fa:	b083      	sub	sp, #12
 80007fc:	af00      	add	r7, sp, #0
 80007fe:	4603      	mov	r3, r0
 8000800:	460a      	mov	r2, r1
 8000802:	71fb      	strb	r3, [r7, #7]
 8000804:	4613      	mov	r3, r2
 8000806:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000808:	79bb      	ldrb	r3, [r7, #6]
 800080a:	2b01      	cmp	r3, #1
 800080c:	d133      	bne.n	8000876 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 800080e:	79fb      	ldrb	r3, [r7, #7]
 8000810:	2b1f      	cmp	r3, #31
 8000812:	d80a      	bhi.n	800082a <GPIO_IRQInterruptConfig+0x32>
		{
			*NVIC_ISER0 |= (1<<IRQNumber);
 8000814:	4b35      	ldr	r3, [pc, #212]	@ (80008ec <GPIO_IRQInterruptConfig+0xf4>)
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	79fa      	ldrb	r2, [r7, #7]
 800081a:	2101      	movs	r1, #1
 800081c:	fa01 f202 	lsl.w	r2, r1, r2
 8000820:	4611      	mov	r1, r2
 8000822:	4a32      	ldr	r2, [pc, #200]	@ (80008ec <GPIO_IRQInterruptConfig+0xf4>)
 8000824:	430b      	orrs	r3, r1
 8000826:	6013      	str	r3, [r2, #0]
		{
			 //program ICER2 register
			 *NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}
}
 8000828:	e059      	b.n	80008de <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 800082a:	79fb      	ldrb	r3, [r7, #7]
 800082c:	2b1f      	cmp	r3, #31
 800082e:	d90f      	bls.n	8000850 <GPIO_IRQInterruptConfig+0x58>
 8000830:	79fb      	ldrb	r3, [r7, #7]
 8000832:	2b3f      	cmp	r3, #63	@ 0x3f
 8000834:	d80c      	bhi.n	8000850 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1<<IRQNumber%32);
 8000836:	4b2e      	ldr	r3, [pc, #184]	@ (80008f0 <GPIO_IRQInterruptConfig+0xf8>)
 8000838:	681b      	ldr	r3, [r3, #0]
 800083a:	79fa      	ldrb	r2, [r7, #7]
 800083c:	f002 021f 	and.w	r2, r2, #31
 8000840:	2101      	movs	r1, #1
 8000842:	fa01 f202 	lsl.w	r2, r1, r2
 8000846:	4611      	mov	r1, r2
 8000848:	4a29      	ldr	r2, [pc, #164]	@ (80008f0 <GPIO_IRQInterruptConfig+0xf8>)
 800084a:	430b      	orrs	r3, r1
 800084c:	6013      	str	r3, [r2, #0]
 800084e:	e046      	b.n	80008de <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 64 && IRQNumber < 96)
 8000850:	79fb      	ldrb	r3, [r7, #7]
 8000852:	2b40      	cmp	r3, #64	@ 0x40
 8000854:	d943      	bls.n	80008de <GPIO_IRQInterruptConfig+0xe6>
 8000856:	79fb      	ldrb	r3, [r7, #7]
 8000858:	2b5f      	cmp	r3, #95	@ 0x5f
 800085a:	d840      	bhi.n	80008de <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1<<IRQNumber%64);
 800085c:	4b25      	ldr	r3, [pc, #148]	@ (80008f4 <GPIO_IRQInterruptConfig+0xfc>)
 800085e:	681b      	ldr	r3, [r3, #0]
 8000860:	79fa      	ldrb	r2, [r7, #7]
 8000862:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8000866:	2101      	movs	r1, #1
 8000868:	fa01 f202 	lsl.w	r2, r1, r2
 800086c:	4611      	mov	r1, r2
 800086e:	4a21      	ldr	r2, [pc, #132]	@ (80008f4 <GPIO_IRQInterruptConfig+0xfc>)
 8000870:	430b      	orrs	r3, r1
 8000872:	6013      	str	r3, [r2, #0]
}
 8000874:	e033      	b.n	80008de <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	2b1f      	cmp	r3, #31
 800087a:	d80a      	bhi.n	8000892 <GPIO_IRQInterruptConfig+0x9a>
			 *NVIC_ICER0 |= ( 1 << IRQNumber );
 800087c:	4b1e      	ldr	r3, [pc, #120]	@ (80008f8 <GPIO_IRQInterruptConfig+0x100>)
 800087e:	681b      	ldr	r3, [r3, #0]
 8000880:	79fa      	ldrb	r2, [r7, #7]
 8000882:	2101      	movs	r1, #1
 8000884:	fa01 f202 	lsl.w	r2, r1, r2
 8000888:	4611      	mov	r1, r2
 800088a:	4a1b      	ldr	r2, [pc, #108]	@ (80008f8 <GPIO_IRQInterruptConfig+0x100>)
 800088c:	430b      	orrs	r3, r1
 800088e:	6013      	str	r3, [r2, #0]
}
 8000890:	e025      	b.n	80008de <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64 )
 8000892:	79fb      	ldrb	r3, [r7, #7]
 8000894:	2b1f      	cmp	r3, #31
 8000896:	d90f      	bls.n	80008b8 <GPIO_IRQInterruptConfig+0xc0>
 8000898:	79fb      	ldrb	r3, [r7, #7]
 800089a:	2b3f      	cmp	r3, #63	@ 0x3f
 800089c:	d80c      	bhi.n	80008b8 <GPIO_IRQInterruptConfig+0xc0>
			 *NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 800089e:	4b17      	ldr	r3, [pc, #92]	@ (80008fc <GPIO_IRQInterruptConfig+0x104>)
 80008a0:	681b      	ldr	r3, [r3, #0]
 80008a2:	79fa      	ldrb	r2, [r7, #7]
 80008a4:	f002 021f 	and.w	r2, r2, #31
 80008a8:	2101      	movs	r1, #1
 80008aa:	fa01 f202 	lsl.w	r2, r1, r2
 80008ae:	4611      	mov	r1, r2
 80008b0:	4a12      	ldr	r2, [pc, #72]	@ (80008fc <GPIO_IRQInterruptConfig+0x104>)
 80008b2:	430b      	orrs	r3, r1
 80008b4:	6013      	str	r3, [r2, #0]
 80008b6:	e012      	b.n	80008de <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 80008b8:	79fb      	ldrb	r3, [r7, #7]
 80008ba:	2b3f      	cmp	r3, #63	@ 0x3f
 80008bc:	d90f      	bls.n	80008de <GPIO_IRQInterruptConfig+0xe6>
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	2b5f      	cmp	r3, #95	@ 0x5f
 80008c2:	d80c      	bhi.n	80008de <GPIO_IRQInterruptConfig+0xe6>
			 *NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 80008c4:	4b0e      	ldr	r3, [pc, #56]	@ (8000900 <GPIO_IRQInterruptConfig+0x108>)
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	79fa      	ldrb	r2, [r7, #7]
 80008ca:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80008ce:	2101      	movs	r1, #1
 80008d0:	fa01 f202 	lsl.w	r2, r1, r2
 80008d4:	4611      	mov	r1, r2
 80008d6:	4a0a      	ldr	r2, [pc, #40]	@ (8000900 <GPIO_IRQInterruptConfig+0x108>)
 80008d8:	430b      	orrs	r3, r1
 80008da:	6013      	str	r3, [r2, #0]
}
 80008dc:	e7ff      	b.n	80008de <GPIO_IRQInterruptConfig+0xe6>
 80008de:	bf00      	nop
 80008e0:	370c      	adds	r7, #12
 80008e2:	46bd      	mov	sp, r7
 80008e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e8:	4770      	bx	lr
 80008ea:	bf00      	nop
 80008ec:	e000e100 	.word	0xe000e100
 80008f0:	e000e104 	.word	0xe000e104
 80008f4:	e000e108 	.word	0xe000e108
 80008f8:	e000e180 	.word	0xe000e180
 80008fc:	e000e184 	.word	0xe000e184
 8000900:	e000e188 	.word	0xe000e188

08000904 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 8000904:	b480      	push	{r7}
 8000906:	b085      	sub	sp, #20
 8000908:	af00      	add	r7, sp, #0
 800090a:	4603      	mov	r3, r0
 800090c:	6039      	str	r1, [r7, #0]
 800090e:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber/4;
 8000910:	79fb      	ldrb	r3, [r7, #7]
 8000912:	089b      	lsrs	r3, r3, #2
 8000914:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber%4;
 8000916:	79fb      	ldrb	r3, [r7, #7]
 8000918:	f003 0303 	and.w	r3, r3, #3
 800091c:	73bb      	strb	r3, [r7, #14]
	uint8_t SHIFT_AMOUNT = (8*iprx_section) + (8 - NO_OF_PR_BITS_IMPLEMENTED);
 800091e:	7bbb      	ldrb	r3, [r7, #14]
 8000920:	00db      	lsls	r3, r3, #3
 8000922:	b2db      	uxtb	r3, r3
 8000924:	3304      	adds	r3, #4
 8000926:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + (iprx*4)) |= (IRQPriority << (SHIFT_AMOUNT));
 8000928:	7bfb      	ldrb	r3, [r7, #15]
 800092a:	011b      	lsls	r3, r3, #4
 800092c:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000930:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000934:	6819      	ldr	r1, [r3, #0]
 8000936:	7b7b      	ldrb	r3, [r7, #13]
 8000938:	683a      	ldr	r2, [r7, #0]
 800093a:	409a      	lsls	r2, r3
 800093c:	7bfb      	ldrb	r3, [r7, #15]
 800093e:	011b      	lsls	r3, r3, #4
 8000940:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000944:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000948:	430a      	orrs	r2, r1
 800094a:	601a      	str	r2, [r3, #0]
}
 800094c:	bf00      	nop
 800094e:	3714      	adds	r7, #20
 8000950:	46bd      	mov	sp, r7
 8000952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000956:	4770      	bx	lr

08000958 <GPIO_IRQHandling>:
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000958:	b480      	push	{r7}
 800095a:	b083      	sub	sp, #12
 800095c:	af00      	add	r7, sp, #0
 800095e:	4603      	mov	r3, r0
 8000960:	71fb      	strb	r3, [r7, #7]

	//clear the exti pending register corresponding to the pin number
	 if(EXTI->PR & ( 1 << PinNumber))
 8000962:	4b0c      	ldr	r3, [pc, #48]	@ (8000994 <GPIO_IRQHandling+0x3c>)
 8000964:	695b      	ldr	r3, [r3, #20]
 8000966:	79fa      	ldrb	r2, [r7, #7]
 8000968:	2101      	movs	r1, #1
 800096a:	fa01 f202 	lsl.w	r2, r1, r2
 800096e:	4013      	ands	r3, r2
 8000970:	2b00      	cmp	r3, #0
 8000972:	d009      	beq.n	8000988 <GPIO_IRQHandling+0x30>
		{
			//clear
			EXTI->PR |= ( 1 << PinNumber);
 8000974:	4b07      	ldr	r3, [pc, #28]	@ (8000994 <GPIO_IRQHandling+0x3c>)
 8000976:	695b      	ldr	r3, [r3, #20]
 8000978:	79fa      	ldrb	r2, [r7, #7]
 800097a:	2101      	movs	r1, #1
 800097c:	fa01 f202 	lsl.w	r2, r1, r2
 8000980:	4611      	mov	r1, r2
 8000982:	4a04      	ldr	r2, [pc, #16]	@ (8000994 <GPIO_IRQHandling+0x3c>)
 8000984:	430b      	orrs	r3, r1
 8000986:	6153      	str	r3, [r2, #20]
		}
}
 8000988:	bf00      	nop
 800098a:	370c      	adds	r7, #12
 800098c:	46bd      	mov	sp, r7
 800098e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000992:	4770      	bx	lr
 8000994:	40013c00 	.word	0x40013c00

08000998 <memset>:
 8000998:	4402      	add	r2, r0
 800099a:	4603      	mov	r3, r0
 800099c:	4293      	cmp	r3, r2
 800099e:	d100      	bne.n	80009a2 <memset+0xa>
 80009a0:	4770      	bx	lr
 80009a2:	f803 1b01 	strb.w	r1, [r3], #1
 80009a6:	e7f9      	b.n	800099c <memset+0x4>

080009a8 <__libc_init_array>:
 80009a8:	b570      	push	{r4, r5, r6, lr}
 80009aa:	4d0d      	ldr	r5, [pc, #52]	@ (80009e0 <__libc_init_array+0x38>)
 80009ac:	4c0d      	ldr	r4, [pc, #52]	@ (80009e4 <__libc_init_array+0x3c>)
 80009ae:	1b64      	subs	r4, r4, r5
 80009b0:	10a4      	asrs	r4, r4, #2
 80009b2:	2600      	movs	r6, #0
 80009b4:	42a6      	cmp	r6, r4
 80009b6:	d109      	bne.n	80009cc <__libc_init_array+0x24>
 80009b8:	4d0b      	ldr	r5, [pc, #44]	@ (80009e8 <__libc_init_array+0x40>)
 80009ba:	4c0c      	ldr	r4, [pc, #48]	@ (80009ec <__libc_init_array+0x44>)
 80009bc:	f000 f818 	bl	80009f0 <_init>
 80009c0:	1b64      	subs	r4, r4, r5
 80009c2:	10a4      	asrs	r4, r4, #2
 80009c4:	2600      	movs	r6, #0
 80009c6:	42a6      	cmp	r6, r4
 80009c8:	d105      	bne.n	80009d6 <__libc_init_array+0x2e>
 80009ca:	bd70      	pop	{r4, r5, r6, pc}
 80009cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80009d0:	4798      	blx	r3
 80009d2:	3601      	adds	r6, #1
 80009d4:	e7ee      	b.n	80009b4 <__libc_init_array+0xc>
 80009d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80009da:	4798      	blx	r3
 80009dc:	3601      	adds	r6, #1
 80009de:	e7f2      	b.n	80009c6 <__libc_init_array+0x1e>
 80009e0:	08000a08 	.word	0x08000a08
 80009e4:	08000a08 	.word	0x08000a08
 80009e8:	08000a08 	.word	0x08000a08
 80009ec:	08000a0c 	.word	0x08000a0c

080009f0 <_init>:
 80009f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009f2:	bf00      	nop
 80009f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009f6:	bc08      	pop	{r3}
 80009f8:	469e      	mov	lr, r3
 80009fa:	4770      	bx	lr

080009fc <_fini>:
 80009fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009fe:	bf00      	nop
 8000a00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a02:	bc08      	pop	{r3}
 8000a04:	469e      	mov	lr, r3
 8000a06:	4770      	bx	lr
